name: Build & Publish NuGet Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-analyze-pack:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      NUGET_API_KEY: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Esto es importante para que SonarCloud tenga acceso a todo el historial

      # Verificar estructura de directorios para diagnóstico
      - name: Check directory structure
        run: |
          echo "Current directory:"
          ls -la
          echo "Bank directory:"
          ls -la Bank/

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install coverlet and reportgenerator
        run: dotnet tool install --global coverlet.console

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool list --global

      # Begin SonarCloud analysis
      - name: Begin SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
            /o:"${{ secrets.SONAR_ORG }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      # Modificación: navegar al directorio donde está la solución
      - name: Restore dependencies
        run: |
          cd Bank
          dotnet restore

      # Modificación: navegar al directorio donde está la solución
      - name: Build
        run: |
          cd Bank
          dotnet build --no-restore --configuration Release

      # Modificación: ajustar ruta para test y generar cobertura en formato OpenCover
      - name: Run Unit Tests with Coverage
        run: |
          cd Bank
          dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverlet.runsettings

      # End SonarCloud analysis
      - name: End SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # Modificación: ajustar ruta para pack
      - name: Pack NuGet Package
        run: |
          cd Bank
          dotnet pack Bank.Domain/Bank.Domain.csproj --configuration Release --output ../nupkg

      # Configurar el origen NuGet de GitHub
      - name: Setup GitHub NuGet Source
        run: |
          dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      # La ruta de los paquetes está ahora en la raíz en el directorio nupkg
      - name: Publish to GitHub NuGet
        run: |
          dotnet nuget push nupkg/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}